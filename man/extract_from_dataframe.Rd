% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ToolsPdfExtraction.R
\name{extract_from_dataframe}
\alias{extract_from_dataframe}
\title{Extract Key-Value Pairs from Dataframe}
\usage{
extract_from_dataframe(data)
}
\arguments{
\item{data}{A dataframe where each cell may contain a key-value pair in the
format "key: value". The function will extract and return these
pairs for each cell in the dataframe.}
}
\value{
A dataframe with two columns:
\item{Keys}{The extracted keys from the input dataframe's cells.}
\item{Values}{The extracted values corresponding to the keys. If no
valid key-value pair is found, those rows will not be included.}
}
\description{
This function takes a dataframe as input and extracts key-value pairs
from each cell in the dataframe. The function loops through each column
and each row, calling \code{extract_key_value} to extract the key-value pair
from the cell. The result is returned as a new dataframe with two columns:
\code{Keys} and \code{Values}, containing the extracted key-value pairs.

This function is useful for dataframes where each cell contains key-value
pairs in a specific format (e.g., "key: value") that needs to be parsed
and structured in a more accessible form.
}
\examples{
# Example 1: Tenn ARLN pdf
# Use system.file to get the path to the example document
  pdf_file_path <- system.file("extdata",
                               "pdf_tnarln_example_1.pdf",
                                package = "arlog")

# Extract the lines from the pdf
  pdf <- pdftools::pdf_text(pdf_file_path)
# Convert the list of list of lists into a single list where each item is a
# line from the document.
  lines <- unlist(strsplit(pdf, "\n"))
  result <- pdf_extract_lines_between(lines, "Accession", "Key")
# Convert the selected lines into a dataframe of three columns.
  result_df <- pdf_split_lines_into_columns(result)
# Extract the three columns from the dataframe.
  extract_table <- extract_from_dataframe(result_df)
  print(extract_table)

# Example 2: A dataframe with empty or missing cells
data2 <- data.frame(
  col1 = c("name: Alice", "", "city: Paris"),
  col2 = c("age: 30", NA, "country: France"),
  stringsAsFactors = FALSE
)
extract_from_dataframe(data2)
# Returns a dataframe with extracted keys and values:
# Keys      Values
# name      Alice
# age       30
# city      Paris
# country   France

}
