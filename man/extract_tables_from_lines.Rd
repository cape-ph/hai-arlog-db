% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ToolsPdfExtraction.R
\name{extract_tables_from_lines}
\alias{extract_tables_from_lines}
\title{Extract Tables from Lines}
\usage{
extract_tables_from_lines(lines)
}
\arguments{
\item{lines}{A character vector where each element is a line of text. The
function will extract tables based on the presence of specific keywords such
as \code{"-PCR"}, \code{"Performing"}, and \code{"Comments"}.}
}
\value{
A list of character vectors. Each element of the list represents a
table, which is a sequence of lines collected between a \code{"-PCR"} and a line
containing \code{"Performing"} or \code{"Comments"}.
}
\description{
This function processes a character vector \code{lines}, extracting tables based
on certain markers. It identifies sections of text that start with a line
containing \code{"-PCR"} and ends with a line containing either \code{"Performing"} or
\code{"Comments"}. The function collects these lines into separate tables, which
are stored as a list of character vectors.
}
\examples{
# Example 1: Tenn ARLN pdf
# Extract the lines from the pdf
# Use system.file to get the path to the example document
  pdf_file_path <- system.file("extdata",
                               "pdf_tnarln_example_1.pdf",
                                package = "arlog")
  pdf <- pdftools::pdf_text(pdf_file_path)
# Convert the list of list of lists into a single list where each item is a
# line from the document.
  lines <- unlist(strsplit(pdf, "\n"))
  tables <- extract_tables_from_lines(lines)
  print(tables)
# Example 2
lines <- c("Start of table 1", "-PCR", "Line 1 of table 1",
           "Line 2 of table 1", "Performing", "Start of table 2",
           "-PCR", "Line 1 of table 2", "Comments")
extract_tables_from_lines(lines)
}
