% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ToolsPdfExtraction.R
\name{get_facility_data}
\alias{get_facility_data}
\title{Extract Facility Data from a Data Frame}
\usage{
get_facility_data(data, col_name)
}
\arguments{
\item{data}{A data frame that contains the data to search.}

\item{col_name}{The name of the column (as a string) to search for the
"Facility:" entry.}
}
\value{
A data frame with two columns:
\itemize{
\item \code{Keys}: The string \code{"Facility"}.
\item \code{Values}: A concatenated string of the two subsequent cells below the
"Facility:" entry in the specified column. If no "Facility:" entry is found
or there are not enough rows, both columns will contain \code{NA}.
}
}
\description{
This function extracts information related to the "Facility" from a specific
column of a data frame. It looks for the cell that contains the text
"Facility:", and if it finds it, retrieves the two subsequent cells in the
column. These values are concatenated into a single string, and the function
returns the result in a data frame. If the "Facility:" entry is not found,
or if there are not enough rows below it, the function returns a data frame
with \code{NA} values.
}
\details{
The function searches for the row in the specified column that contains the
string "Facility:".
It then checks if there are at least two rows below this entry and
concatenates the values of the two cells directly below "Facility:". The
concatenated result is returned in a data frame with "Facility" as the key.
If "Facility:" is not found or if there are fewer than two rows below it, the
function returns a data frame with \code{NA} values.
}
\examples{
# Example 1: Tenn ARLN pdf
# Use system.file to get the path to the example document
  pdf_file_path <- system.file("extdata",
                               "pdf_tnarln_example_1.pdf",
                                package = "arlog")

# Extract the lines from the pdf
  pdf <- pdftools::pdf_text(pdf_file_path)
# Convert the list of list of lists into a single list where each item is a
# line from the document.
  lines <- unlist(strsplit(pdf, "\n"))
  result <- pdf_extract_lines_between(lines, "Accession", "Key")
  result_df <- pdf_split_lines_into_columns(result)
  extract_table <- extract_from_dataframe(result_df)
  pdf_facility <- get_facility_data(extract_table, "Keys")
  print(pdf_facility)
# Example 2: Extract Facility data from a data frame
data <- data.frame(Column1 = c("Header", "Facility:", "Building A",
                               "Room 101", "Footer"))
result <- get_facility_data(data, "Column1")
print(result)
# Should return a data frame with "Facility" as the key and
# "Building A Room 101" as the value
}
